services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quicknotes-postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_DATABASE:-quicknotes}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - quicknotes-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: quicknotes-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - quicknotes-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API - Instance 1
  api-1:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quicknotes-api-1
    environment:
      NODE_ENV: production
      API_PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DATABASE: ${DB_DATABASE:-quicknotes}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-24h}
      FRONTEND_URL: http://localhost
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quicknotes-network
    restart: unless-stopped

  # Backend API - Instance 2
  api-2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quicknotes-api-2
    environment:
      NODE_ENV: production
      API_PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DATABASE: ${DB_DATABASE:-quicknotes}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-24h}
      FRONTEND_URL: http://localhost
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quicknotes-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost/api
    container_name: quicknotes-frontend
    networks:
      - quicknotes-network
    restart: unless-stopped

  # NGINX Load Balancer
  nginx:
    image: nginx:alpine
    container_name: quicknotes-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-1
      - api-2
      - frontend
    networks:
      - quicknotes-network
    restart: unless-stopped

networks:
  quicknotes-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
